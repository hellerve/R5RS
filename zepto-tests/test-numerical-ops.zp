(load "zepto-tests/unit.zp")

(assert-equal (lambda () (id 10e-1)) 1.0)
(assert-equal (lambda () (id 14e1)) 140)

(assert-equal (lambda () (complex? 3+4i)) #t)
(assert-equal (lambda () (complex? 3)) #t)
(assert-equal (lambda () (integer? 3)) #t)
(assert-equal (lambda () (integer? 3.0)) #f)
(assert-equal (lambda () (integer? (make-small 3))) #t)
(assert-equal (lambda () (real? 10.0)) #t)
(assert-equal (lambda () (real? 10)) #t)
(assert-equal (lambda () (real? (make-small 10))) #t)
(assert-equal (lambda () (rational? 10.0)) #t)
(assert-equal (lambda () (rational? 10.1)) #f)
(assert-equal (lambda () (rational? 12/5)) #t)

(assert-equal (lambda () (max 3 4)) 4)
(assert-equal (lambda () (max 3.9 4)) 4)
(assert-equal (lambda () (abs -10)) 10)

(assert-equal (lambda () (+ 1 2 3 4 5)) 15)
(assert-equal (lambda () (+ 1 2 3 4 (make-small 5))) 15)
(assert-equal (lambda () (+ 4/8 5)) 44/8)
(assert-equal (lambda () (+ (make-small 4) (make-small 3))) 7)
(assert-equal (lambda () (- 1 2)) -1)
(assert-equal (lambda () (* 2 3)) 6)
(assert-equal (lambda () (* 4/2 6/2)) 6/1)
(assert-equal (lambda () (* 8/4 6/2)) 24/4)
(assert-equal (lambda () (/ 2 1)) 2)
(assert-equal (lambda () (/ 1 2)) 0)
(assert-equal (lambda () (/ 1.0 2)) 0.5)
(assert-equal (lambda () (/ 1/1 2/1)) 1/2)
(assert-equal (lambda () (modulo 8 2)) 0)
(assert-equal (lambda () (modulo 9 (make-small 2))) 1)
(assert-equal (lambda () (modulo 9 2)) 1)
(assert-equal (lambda () (quotient 44 2)) 22)
(assert-equal (lambda () (modulo 13 -4)) -3)
(assert-equal (lambda () (remainder 13 -4)) 1)
(assert-equal (lambda () (modulo -13 -4)) -1)
(assert-equal (lambda () (remainder -13 -4)) -1)

(assert-equal (lambda () (floor -4.3)) -5.0)
(assert-equal (lambda () (ceiling -4.3)) -4.0)
(assert-equal (lambda () (truncate -4.3)) -4.0)
(assert-equal (lambda () (round -4.3)) -4.0)
(assert-equal (lambda () (floor 3.5)) 3.0)
(assert-equal (lambda () (floor (make-small 3))) 3)
(assert-equal (lambda () (ceiling 3.5)) 4.0)
(assert-equal (lambda () (truncate 3.5)) 3.0)
(assert-equal (lambda () (round 3.5)) 4.0)
(assert-equal (lambda () (round 7)) 7)
(assert-equal (lambda () (round (make-small 7))) 7)
(assert-equal (lambda () (round 7/2)) 4)
(assert-equal (lambda () (expt 2 10)) 1024)
(assert-equal (lambda () (sqrt 9)) 3.0)

(assert-equal (lambda () (= 1 (+ 0 1))) #t)
(assert-equal (lambda () (= 1.0 1)) #t)
(assert-equal (lambda () (= 1.0 (make-small 1))) #t)
(assert-equal (lambda () (> 1.1 (make-small 1))) #t)
(assert-equal (lambda () (/= 1 (make-small 1))) #f)
(assert-equal (lambda () (> 2 1)) #t)
(assert-equal (lambda () (> 2 1.9)) #t)
(assert-equal (lambda () (>= 2 1)) #t)
(assert-equal (lambda () (>= 2 1.9)) #t)
(assert-equal (lambda () (>= 2 2)) #t)
(assert-equal (lambda () (>= 2 2.0)) #t)
(assert-equal (lambda () (<= 2 2.0)) #t)
(assert-equal (lambda () (< 2 2.0)) #f)

(unit-test-handler-results)
(unit-test-all-passed)
